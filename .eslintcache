[{"/home/weslley/Documentos/Cursos/b7web/netflixclone/src/App.js":"1","/home/weslley/Documentos/Cursos/b7web/netflixclone/src/index.js":"2","/home/weslley/Documentos/Cursos/b7web/netflixclone/src/Tmdb.js":"3","/home/weslley/Documentos/Cursos/b7web/netflixclone/src/components/MovieRow.js":"4","/home/weslley/Documentos/Cursos/b7web/netflixclone/src/components/FeaturedMovie.js":"5","/home/weslley/Documentos/Cursos/b7web/netflixclone/src/components/Header.js":"6"},{"size":1886,"mtime":1607502372624,"results":"7","hashOfConfig":"8"},{"size":196,"mtime":1607457715176,"results":"9","hashOfConfig":"8"},{"size":2688,"mtime":1607462087724,"results":"10","hashOfConfig":"8"},{"size":1055,"mtime":1607502570558,"results":"11","hashOfConfig":"8"},{"size":1629,"mtime":1607466838761,"results":"12","hashOfConfig":"8"},{"size":643,"mtime":1607469400572,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2ew0nf",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/weslley/Documentos/Cursos/b7web/netflixclone/src/App.js",["29"],"/home/weslley/Documentos/Cursos/b7web/netflixclone/src/index.js",[],"/home/weslley/Documentos/Cursos/b7web/netflixclone/src/Tmdb.js",["30"],"// Dados da API\nconst API_KEY = '67c598dc1947fc1ddfb785a4ed4d0b1b';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/**\n * originais da Netflix\n * recomendados\n * em alta\n * ação\n * comédia\n * terror\n * romance\n * documentários\n */\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais da Netflix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para você',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'topreated',\n                title: 'Em alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Em alta',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentários',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ];\n    },\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n\n        if (movieId) {\n            switch (type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                    break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                    break;\n                default:\n                    info = null;\n                    break;\n            }\n        }\n\n        return info;\n    }\n};",["31","32"],"/home/weslley/Documentos/Cursos/b7web/netflixclone/src/components/MovieRow.js",["33"],"/home/weslley/Documentos/Cursos/b7web/netflixclone/src/components/FeaturedMovie.js",["34"],"import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({ item }) => {\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n    for (let i in item.genres) {\n        genres.push(item.genres[i].name);\n    }\n\n    return (\n        <section className=\"featured\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">{item.original_name}</div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n                    <div className=\"featured--description\">{item.overview}</div>\n                    <div className=\"featured--buttons\">\n                        <a href={ `/watch/${item.id}` } className=\"featured--watchbutton\">▶ Assistir</a>\n                        <a href={ `/list/add/${item.id}` } className=\"featured--mylistbutton\">+ Minha lista</a>\n                    </div>\n                    <div className=\"featured--genres\"><strong>Gêneros</strong> {genres.join(', ')} </div>\n                </div>\n            </div>\n        </section>\n    );\n}","/home/weslley/Documentos/Cursos/b7web/netflixclone/src/components/Header.js",["35","36"],{"ruleId":"37","severity":1,"message":"38","line":8,"column":1,"nodeType":"39","endLine":73,"endColumn":2},{"ruleId":"37","severity":1,"message":"40","line":22,"column":1,"nodeType":"39","endLine":86,"endColumn":3},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"37","severity":1,"message":"38","line":6,"column":1,"nodeType":"39","endLine":28,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":4,"column":1,"nodeType":"39","endLine":35,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":4,"column":1,"nodeType":"39","endLine":18,"endColumn":2},{"ruleId":"45","severity":1,"message":"46","line":13,"column":21,"nodeType":"47","endLine":13,"endColumn":128},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]